# version: 2
# jobs:
# build:
#   macos:
#     xcode: "9.1.0" 
#     steps: 
#       - checkout
#       - run:
#          name: Bundle update 
#         command: bundle update 
#       - run:
#         name: Run tests
#         command: bundle exec fastlane test
# deploy:
#   macos:
#     xcode: "9.1.0"
#     steps: 
#       - checkout
#       - run:
#          name: Bundle update 
#          command: bundle update
#       - run:
#          name: Run Deployments 
#          command: bundle exec fastlane scan

# workflows:
#   version: 2
#   build-n-deploy:
#     jobs:
#       - build:
#       - deploy:
#           filters:
#               branches:
#                  only: newBrach
# .circleci/config.yml

# Specify the config version - version 2 is latest.
version: 2

# Define the jobs for the current project.
jobs:
  build-and-test:

    # Specify the Xcode version to use.
    macos:
      xcode: "8.3.3"

    # Define the steps required to build the project.
    steps:

      # Get the code from the VCS provider.
      - checkout

      # Download CocoaPods specs via HTTPS (faster than Git)
      # and install CocoaPods.
      # - run:
      #     name: Install CocoaPods
      #     command: |
      #       curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      #       pod install
      - run:
          name: Bundle update 
          command: bundle update 
      # Run tests.
      - run:
          name: Run tests
          command: fastlane test
          environment:
            SCAN_DEVICE: iPhone 6
            SCAN_SCHEME: WebTests

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab.
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: scan-test-results
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

  deploy:
    macos:
      xcode: "8.3.3"

    steps:
      - checkout

      # Set up code signing via Fastlane Match.
      - run:
          name: Set up code signing
          command: fastlane match development --readonly

      # Build the release version of the app.
      - run:
          name: Build IPA
          command: fastlane test

      # Store the IPA file in the build artifacts
      - store_artifacts:
          path: ./MyApp.ipa
          destination: ipa

      # Deploy!
      - run:
          name: Deploy to App Store
          command: fastlane test

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
